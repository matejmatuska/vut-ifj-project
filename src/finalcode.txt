./autotest.sh
Correct inputs:
../tests/correct/example1.tl failed!
../tests/correct/example2.tl failed!
../tests/correct/example3.tl failed!
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
#start of the function f
LABEL f
PUSHFRAME
DEFVAR LF@x
MOVE LF@x  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
PUSHS LF@x
PUSHS int@10
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
LTS
POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
PUSHS LF@x
PUSHS int@1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

POPS LF@retval1
CREATEFRAME
PUSHS LF@x
PUSHS int@1
POPS LF@x
CREATEFRAME
PUSHS string@calling\032g\032with\032
PUSHS LF@x
PUSHS string@\010
PUSHS int@3
CALL write
DEFVAR LF@res
MOVE LF@res int@0
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL g
MOVE LF@res TF@retval1
PUSHS LF@res
POPS LF@retval1
JUMP end_else1
LABEL end_if1
LABEL end_else1
#start of the function g
LABEL g
PUSHFRAME
DEFVAR LF@x
MOVE LF@x  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
PUSHS LF@x
PUSHS int@0
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
GTS

POPS GF@tmp1
JUMPIFEQ end_if2 GF@tmp1 bool@false
CREATEFRAME
PUSHS string@calling\032f\032with\032
PUSHS LF@x
PUSHS string@\010
PUSHS int@3
CALL write
DEFVAR LF@x
MOVE LF@x int@0
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL f
MOVE LF@x TF@retval1
PUSHS LF@x
POPS LF@retval1
CREATEFRAME
PUSHS int@200
POPS LF@retval1
JUMP end_else2
LABEL end_if2
LABEL end_else2
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@res
MOVE LF@res int@0
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL g
MOVE LF@res TF@retval1
CREATEFRAME
PUSHS string@res:\032
PUSHS LF@res
PUSHS string@\010
PUSHS int@3
CALL write
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
CALL main
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function hlavni_program
LABEL hlavni_program
PUSHFRAME
DEFVAR LF@year
MOVE LF@year  LF@%1
CREATEFRAME
PUSHS string@Hello\032from\032IFJ
PUSHS LF@year
PUSHS string@\010
PUSHS int@3
CALL write
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL hlavni_program
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL hlavni_program
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function foo
LABEL foo
PUSHFRAME
DEFVAR LF@x
MOVE LF@x  LF@%1
DEFVAR LF@y
MOVE LF@y  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 int@0
DEFVAR LF@i
MOVE LF@i int@0
PUSHS LF@x
POPS LF@i
DEFVAR LF@j
MOVE LF@j int@0
PUSHS LF@y
PUSHS int@2
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS int@3
POPS LF@j
PUSHS LF@j
PUSHS int@1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@i
PUSHS LF@i
PUSHS int@1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@j
PUSHS LF@i
POPS LF@retval1
PUSHS LF@j
POPS LF@retval2
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a int@0
PUSHS int@1
POPS LF@a
DEFVAR LF@b
MOVE LF@b int@0
PUSHS int@2
POPS LF@b
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
DEFVAR TF@%1
POPS TF@%1
CALL foo
MOVE LF@a TF@retval1
MOVE LF@b TF@retval2
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
LTS
POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
CREATEFRAME
PUSHS LF@a
PUSHS string@<
PUSHS LF@b
PUSHS string@\010
PUSHS int@4
CALL write
CREATEFRAME
CREATEFRAME
PUSHS LF@a
PUSHS string@>=
PUSHS LF@b
PUSHS string@\010
PUSHS int@4
CALL write
DEFVAR LF@a
MOVE LF@a int@0
PUSHS int@666
POPS LF@a
CREATEFRAME
PUSHS LF@a
PUSHS string@\010
PUSHS int@2
CALL write
JUMP end_else1
LABEL end_if1
LABEL end_else1
CREATEFRAME
PUSHS LF@a
PUSHS string@\010
PUSHS int@2
CALL write
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
CALL main
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@s1
MOVE LF@s1 string@
PUSHS string@Toto\032je\032nejaky\032text
POPS LF@s1
DEFVAR LF@s2
MOVE LF@s2 string@
PUSHS LF@s1
PUSHS string@,\032ktery\032jeste\032trochu\032obohatime
POPS LF@s2
CREATEFRAME
PUSHS LF@s1
PUSHS string@\010
PUSHS LF@s2
PUSHS string@\010
PUSHS int@4
CALL write
DEFVAR LF@s1len
MOVE LF@s1len int@0
PUSHS LF@s1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp1 GF@tmp1
PUSHS  GF@tmp1

POPS LF@s1len
DEFVAR LF@s1len4
MOVE LF@s1len4 int@0
PUSHS LF@s1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp1 GF@tmp1
PUSHS  GF@tmp1

PUSHS int@3
POPS LF@s1len4
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
DEFVAR TF@%1
POPS TF@%1
DEFVAR TF@%2
POPS TF@%2
CALL substr
MOVE LF@s1 TF@retval1
CREATEFRAME
PUSHS string@4\032znaky\032od\032
PUSHS LF@s1len4
PUSHS string@.\032znaku\032v\032"
PUSHS LF@s2
PUSHS string@":
PUSHS LF@s1
PUSHS string@\010
PUSHS int@7
CALL write
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
DEFVAR TF@%1
POPS TF@%1
DEFVAR TF@%2
POPS TF@%2
CALL substr
MOVE LF@s1 TF@retval1
PUSHS LF@s1
POPS LF@s1len4
CREATEFRAME
PUSHS LF@s1len4
PUSHS string@\032znaky\032od\032
PUSHS int@16
PUSHS string@.\032znaku\032v\032"
PUSHS LF@s2
PUSHS string@":
PUSHS LF@s1
PUSHS string@\010
PUSHS int@8
CALL write
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
CALL main
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@hi
MOVE LF@hi int@0
PUSHS int@10
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@hi
DEFVAR LF@x
MOVE LF@x int@0
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL test
MOVE LF@x TF@retval1
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@bomba
MOVE LF@bomba  LF@%1
DEFVAR LF@hi
MOVE LF@hi int@0
PUSHS int@10
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@hi
DEFVAR LF@x
MOVE LF@x int@0
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
CALL test
MOVE LF@x TF@retval1
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
DEFVAR LF@c
MOVE LF@c float@0x1.2666666666666p+0
PUSHS float@0x0.500000p+0
POPS LF@c
CREATEFRAME
PUSHS string@string
PUSHS int@1
CALL write
PUSHS LF@c
POPS LF@retval1
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a int@0
DEFVAR LF@b
MOVE LF@b string@
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval2
MOVE LF@retval2 float@0x1.2666666666666p+0
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval2
MOVE LF@retval2 float@0x1.2666666666666p+0
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval2
MOVE LF@retval2 int@0
#start of the function olalala
LABEL olalala
PUSHFRAME
DEFVAR LF@x
MOVE LF@x  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval2
MOVE LF@retval2 int@0
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function abc
LABEL abc
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@c
MOVE LF@c int@0
PUSHS int@13
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@c
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

PUSHS LF@a
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
GTS

POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
DEFVAR LF@a
MOVE LF@a string@
PUSHS string@hello
PUSHS string@world
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
CONCAT GF@tmp1 GF@tmp2 GF@tmp1
PUSHS GF@tmp1

POPS LF@a
LABEL while1
PUSHS LF@b
PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

PUSHS int@500
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
LTS
POPS GF@tmp1
JUMPIFEQ end_while1 GF@tmp1 bool@false
DEFVAR LF@a
MOVE LF@a int@0
PUSHS int@13
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS int@10
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

POPS LF@a
JUMP while1
LABEL end_while1
CREATEFRAME
JUMP end_else1
LABEL end_if1
LABEL end_else1
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function abc
LABEL abc
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@c
MOVE LF@c int@0
PUSHS int@5
POPS LF@c
LABEL while1
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS GF@tmp1
JUMPIFEQ end_while1 GF@tmp1 bool@false
LABEL while2
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

POPS GF@tmp1
JUMPIFEQ end_while2 GF@tmp1 bool@false
PUSHS LF@c
POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
LABEL while3
PUSHS LF@c
PUSHS LF@a
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

POPS GF@tmp1
JUMPIFEQ end_while3 GF@tmp1 bool@false
JUMP while3
LABEL end_while3
CREATEFRAME
JUMP end_else1
LABEL end_if1
LABEL end_else1
JUMP while2
LABEL end_while2
JUMP while1
LABEL end_while1
PUSHS LF@b
PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

POPS GF@tmp1
JUMPIFEQ end_if2 GF@tmp1 bool@false
CREATEFRAME
LABEL while4
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
JUMPIFNEQ next_label GF@tmp1 float@0x0p+0
CLEARS 
EXIT int@9
LABEL next_label
PUSHS GF@tmp1
DIVS

PUSHS int@50
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
GTS

INT2FLOATS
POPS GF@tmp1
JUMPIFEQ end_while4 GF@tmp1 bool@false
JUMP while4
LABEL end_while4
JUMP end_else2
LABEL end_if2
LABEL end_else2
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@hi
MOVE LF@hi int@0
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@hi
PUSHS string@ahoj
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@hi
MOVE LF@hi int@0
PUSHS int@1
PUSHS int@10
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@hi
PUSHS LF@hi
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
GTS

POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
DEFVAR LF@heeeeeeeeeeeeeeeeeeeeadsaeeeeee
MOVE LF@heeeeeeeeeeeeeeeeeeeeadsaeeeeee string@
PUSHS string@testy\032testy\032test
POPS LF@heeeeeeeeeeeeeeeeeeeeadsaeeeeee
PUSHS int@25
CREATEFRAME
JUMP end_else1
LABEL end_if1
LABEL end_else1
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
DEFVAR LF@hi
MOVE LF@hi int@0
PUSHS int@5
PUSHS int@7
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@hi
DEFVAR LF@bye
MOVE LF@bye int@0
PUSHS int@12
POPS LF@bye
PUSHS LF@a
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@a
PUSHS LF@hi
POPS LF@retval1
PUSHS string@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
POPS LF@retval2
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
DEFVAR LF@b
MOVE LF@b int@0
PUSHS int@5
PUSHS int@9
POPS LF@b
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@a
PUSHS LF@a
POPS LF@retval1
PUSHS string@b
POPS LF@retval2
PUSHS int@12
PUSHS int@3
PUSHS string@hehe
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
DEFVAR LF@a
MOVE LF@a int@0
PUSHS int@16
PUSHS int@4
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
JUMPIFNEQ next_label GF@tmp1 int@0
CLEARS 
EXIT int@9
LABEL next_label
INT2FLOATS
PUSHS GF@tmp1
INT2FLOATS
DIVS
FLOAT2INTS

POPS LF@a
DEFVAR LF@b
MOVE LF@b string@
PUSHS string@5\032-\0329
POPS LF@b
DEFVAR LF@c
MOVE LF@c float@0x1.2666666666666p+0
PUSHS float@0x12.500000p+0
POPS LF@c
DEFVAR LF@d
MOVE LF@d string@
PUSHS string@lalala
POPS LF@d
DEFVAR LF@e
MOVE LF@e string@
PUSHS string@lelele
POPS LF@e
PUSHS LF@a
PUSHS int@5
PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
JUMPIFNEQ next_label GF@tmp1 float@0x0p+0
CLEARS 
EXIT int@9
LABEL next_label
PUSHS GF@tmp1
DIVS

POPS GF@tmp1
INT2FLOATS 
PUSHS GF@tmp1
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS GF@tmp1
INT2FLOATS 
PUSHS GF@tmp1
PUSHS LF@d
PUSHS LF@e
PUSHS LF@e
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
CONCAT GF@tmp1 GF@tmp2 GF@tmp1
PUSHS GF@tmp1

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
CONCAT GF@tmp1 GF@tmp2 GF@tmp1
PUSHS GF@tmp1

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp1 GF@tmp1
PUSHS  GF@tmp1

PUSHS int@2
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

INT2FLOATS
POPS LF@c
PUSHS LF@a
POPS LF@retval1
PUSHS LF@b
POPS LF@retval2
PUSHS int@12
PUSHS int@3
PUSHS string@hehe
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
CALL main
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function hi
LABEL hi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
PUSHS int@3
POPS LF@retval1
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 float@0x1.2666666666666p+0
DEFVAR LF@heh
MOVE LF@heh int@0
PUSHS int@5
PUSHS int@7
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@heh
DEFVAR LF@bye
MOVE LF@bye int@0
PUSHS int@12
PUSHS int@3
POPS LF@bye
CREATEFRAME
MOVE LF@a TF@retval1
CALL hi
PUSHS LF@heh
POPS LF@retval1
PUSHS LF@bye
POPS LF@retval2
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function abcdedgf
LABEL abcdedgf
PUSHFRAME
DEFVAR LF@o
MOVE LF@o  LF@%1
#start of the function a
LABEL a
PUSHFRAME
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@n
MOVE LF@n  LF@%1
#start of the function af
LABEL af
PUSHFRAME
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@n
MOVE LF@n  LF@%2
#start of the function abc
LABEL abc
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@s
MOVE LF@s  LF@%2
DEFVAR LF@n
MOVE LF@n  LF@%3
#start of the function abcd
LABEL abcd
PUSHFRAME
DEFVAR LF@kk
MOVE LF@kk  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 string@
#start of the function abcde
LABEL abcde
PUSHFRAME
DEFVAR LF@f
MOVE LF@f  LF@%1
DEFVAR LF@n
MOVE LF@n  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 int@0
DEFVAR LF@retval2
MOVE LF@retval2 string@
#start of the function abcdedg
LABEL abcdedg
PUSHFRAME
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@n
MOVE LF@n  LF@%2
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
DEFVAR LF@retval2
MOVE LF@retval2 int@0
#start of the function abcdedgfa
LABEL abcdedgfa
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@s
MOVE LF@s  LF@%2
DEFVAR LF@n
MOVE LF@n  LF@%3
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@retval2
MOVE LF@retval2 int@0
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function main
LABEL main
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
DEFVAR LF@c
MOVE LF@c float@0x1.2666666666666p+0
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
JUMPIFNEQ next_label GF@tmp1 float@0x0p+0
CLEARS 
EXIT int@9
LABEL next_label
PUSHS GF@tmp1
DIVS

INT2FLOATS
POPS LF@c
PUSHS LF@c
POPS LF@retval1
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
DEFVAR TF@%0
POPS TF@%0
DEFVAR TF@%1
POPS TF@%1
CALL main
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function abc
LABEL abc
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@c
MOVE LF@c int@0
PUSHS int@13
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS LF@c
PUSHS string@hello
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp1 GF@tmp1
PUSHS  GF@tmp1

POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
PUSHS int@5
PUSHS int@2
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

PUSHS int@2
EQS

NOTS

POPS GF@tmp1
JUMPIFEQ end_if2 GF@tmp1 bool@false
PUSHS int@6
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS int@11
EQS

POPS GF@tmp1
JUMPIFEQ end_if3 GF@tmp1 bool@false
PUSHS int@7
PUSHS int@14
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS GF@tmp1
JUMPIFEQ end_if4 GF@tmp1 bool@false
CREATEFRAME
JUMP end_else4
LABEL end_if4
LABEL end_else4
CREATEFRAME
JUMP end_else3
LABEL end_if3
LABEL end_else3
CREATEFRAME
JUMP end_else2
LABEL end_if2
LABEL end_else2
CREATEFRAME
JUMP end_else1
LABEL end_if1
LABEL end_else1
PUSHS LF@a
PUSHS LF@b
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
GTS

POPS GF@tmp1
JUMPIFEQ end_if5 GF@tmp1 bool@false
DEFVAR LF@d
MOVE LF@d string@
PUSHS string@hello
PUSHS string@world
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
CONCAT GF@tmp1 GF@tmp2 GF@tmp1
PUSHS GF@tmp1

POPS LF@d
LABEL while1
PUSHS LF@a
PUSHS LF@b
PUSHS LF@c
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

POPS GF@tmp1
JUMPIFEQ end_while1 GF@tmp1 bool@false
DEFVAR LF@a
MOVE LF@a int@0
PUSHS int@13
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

PUSHS int@10
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
MULS

POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS

POPS LF@a
JUMP while1
LABEL end_while1
CREATEFRAME
JUMP end_else5
LABEL end_if5
LABEL end_else5
POPS GF@tmp1
JUMPIFEQ end_if6 GF@tmp1 bool@false
CREATEFRAME
JUMP end_else6
LABEL end_if6
LABEL end_else6
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function abc
LABEL abc
PUSHFRAME
DEFVAR LF@a
MOVE LF@a  LF@%1
DEFVAR LF@b
MOVE LF@b  LF@%1
DEFVAR LF@c
MOVE LF@c float@0x1.2666666666666p+0
PUSHS float@0x13.500000p+0
PUSHS int@5
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS

INT2FLOATS
POPS LF@c
POPFRAME
CLEARS
EXIT int@0
.IFJcode21
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
JUMP __MAIN__

LABEL error_label
CLEARS
EXIT int@8

#start of the function write
LABEL write
POPS GF@tmp1
LABEL loop2
GT GF@tmp2 GF@tmp1 int@0
JUMPIFEQ end_loop2 GF@tmp2 bool@false 
POPS GF@tmp2
SUB GF@tmp1 GF@tmp1 int@1
WRITE GF@tmp2
JUMP loop2
LABEL end_loop2
RETURN
#end of the function write

#start of the function reads
LABEL reads
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
READ LF@retval1 string
POPFRAME
RETURN
#end of the function reads

#start of the function readi
LABEL readi
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 int@0
READ LF@retval1 int
POPFRAME
RETURN
#end of the function readi

#start of the function readn
LABEL readn
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 float@0x1.2666666666666p+0
READ LF@retval1 float
POPFRAME
RETURN
#end of the function readn

#start of the function tointeger
LABEL tointeger
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@f
MOVE LF@f  LF@%1
FLOAT2INT LF@retval1 LF@f
POPFRAME
RETURN
#end of the function tointeger

#start of the function substr
LABEL substr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 string@
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@j
MOVE LF@j  LF@%3
DEFVAR LF@length
DEFVAR LF@tmp
DEFVAR LF@sign
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@j LF@length
JUMPIFEQ return_label3 LF@tmp bool@true
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
SUB LF@i LF@i int@1
SUB LF@j LF@j int@1
LABEL loop
GETCHAR LF@sign LF@s LF@i
CONCAT LF@retval1 LF@retval1 LF@sign
ADD LF@i LF@i int@1
GT LF@tmp LF@i LF@j
JUMPIFEQ return_label3 LF@tmp bool@true
JUMP loop
LABEL return_label3
POPFRAME
RETURN
#end of the function substr

#start of the function ord
LABEL ord
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@s
MOVE LF@s  LF@%1
DEFVAR LF@i
MOVE LF@i  LF@%2
DEFVAR LF@length
DEFVAR LF@tmp
STRLEN LF@length LF@s
GT LF@tmp LF@i LF@length
JUMPIFEQ return_label2 LF@tmp bool@true
SUB LF@i LF@i int@1
STRI2INT LF@retval1 LF@s LF@i
LABEL return_label2
POPFRAME
RETURN
#end of the function ord

#start of the function chr
LABEL chr
PUSHFRAME
DEFVAR LF@retval1
MOVE LF@retval1 nil@nil
DEFVAR LF@i
MOVE LF@i  LF@%1
DEFVAR LF@tmp
LT LF@tmp LF@i int@0
JUMPIFEQ return_label1 LF@tmp bool@true
GT LF@tmp LF@i int@255
JUMPIFEQ return_label1 LF@tmp bool@true
INT2CHAR LF@retval1 LF@i
LABEL return_label1
POPFRAME
RETURN
#end of the function chr

CREATEFRAME
#start of the function program
LABEL program
PUSHFRAME
DEFVAR LF@y
MOVE LF@y int@0
PUSHS int@20
POPS LF@y
PUSHS int@1
PUSHS int@1
EQS

POPS GF@tmp1
JUMPIFEQ end_if1 GF@tmp1 bool@false
PUSHS int@10
POPS LF@y
CREATEFRAME
PUSHS LF@y
PUSHS int@1
CALL write
CREATEFRAME
CREATEFRAME
PUSHS LF@y
PUSHS int@1
CALL write
JUMP end_else1
LABEL end_if1
LABEL end_else1
CREATEFRAME
PUSHS LF@y
PUSHS int@1
CALL write
DEFVAR LF@i
MOVE LF@i int@0
PUSHS int@1
POPS LF@i
LABEL while1
PUSHS LF@i
PUSHS int@10
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
POPS GF@tmp2
TYPE GF@tmp3 GF@tmp2
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
PUSHS GF@tmp2
PUSHS GF@tmp1
EQS
PUSHS GF@tmp2
PUSHS GF@tmp1
LTS
ORS

POPS GF@tmp1
JUMPIFEQ end_while1 GF@tmp1 bool@false
DEFVAR LF@i
MOVE LF@i int@0
PUSHS LF@i
PUSHS int@5
POPS LF@i
PUSHS LF@i
PUSHS int@1
POPS LF@i
CREATEFRAME
PUSHS LF@i
PUSHS int@1
CALL write
CREATEFRAME
PUSHS string@Insert\032non-empty\032input\032for\032quiting,\032otherwise\032next\032iteration.\010
PUSHS int@1
CALL write
DEFVAR LF@inp
MOVE LF@inp string@
CREATEFRAME
MOVE LF@inp TF@retval1
CALL reads
PUSHS LF@inp
POPS GF@tmp1
TYPE GF@tmp3 GF@tmp1
JUMPIFEQ error_label GF@tmp3 string@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp1 GF@tmp1
PUSHS  GF@tmp1

PUSHS int@0
EQS

NOTS

POPS GF@tmp1
JUMPIFEQ end_if2 GF@tmp1 bool@false
CREATEFRAME
JUMP end_else2
LABEL end_if2
LABEL end_else2
JUMP while1
LABEL end_while1
LABEL __MAIN__
CREATEFRAME
PUSHFRAME
CREATEFRAME
CALL program
POPFRAME
CLEARS
EXIT int@0
../tests/correct/whitespaces.tl failed!
Incorrect inputs:
